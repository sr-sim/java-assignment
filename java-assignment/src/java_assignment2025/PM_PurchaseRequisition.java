/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package java_assignment2025;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java_assignment2025.Item;
import java_assignment2025.PurchaseOrder;
import java_assignment2025.TextFile;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Macy Khoo
 */
public class PM_PurchaseRequisition extends javax.swing.JFrame {
    private PurchaseRequisitionManager prmanager;
    private InventoryDataManager inventorydatamanager;
   
     //search functionfrom Pr list
    public void search(String str){
       DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
       TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
       jTable1.setRowSorter(sorter);
       sorter.setRowFilter(RowFilter.regexFilter("(?i)" + str));

    }
    
    /**
     * Creates new form PM_PurchaseRequisition
     */
    public PM_PurchaseRequisition() {
        initComponents();
        this.prmanager = new PurchaseRequisitionManager();
        this.inventorydatamanager = new InventoryDataManager();
        fillTableFromTxtFile();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void fillTableFromTxtFile() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0); 
        for (PurchaseRequisition pr : prmanager.getprlist()) {
            String prid = pr.getPrid();
            List<String> itemidslist = pr.getItemids();
            String itemids = String.join(",", itemidslist);
            List<String> quantitieslist = pr.getQuantities();
            String quantity = String.join(",", quantitieslist);
            List<String> unitPricelist = pr.getUnitPrices();
            String unitprice = String.join(",",unitPricelist);
            String totalprice = pr.getTotal();
            String reqdate = pr.getRequestdate();
            String expecteddate = pr.getExpecteddeliverydate();
            String createdby = pr.getUserid();
            String note = pr.getNote();
            String status = pr.getApprovestatus().toString();

            List<String> itemnameslist = new ArrayList<>();
            for (String itemid : itemidslist){
                itemid = itemid.trim();
                Item item = inventorydatamanager.finditemid(itemid);
                itemnameslist.add((item != null)? item.getItemname():"unknown item");
            }
            String itemnames = String.join(",", itemnameslist); 
            
            model.addRow(new Object[]{
                prid, itemids, itemnames,
                quantity,unitprice, totalprice,
                reqdate, expecteddate, createdby,note,
                status
            });
        }
        
        //drop down list for "status"
        String[] statuses = {"pending","reject","approved"};
        JComboBox<String> comboBox = new JComboBox<>(statuses);
        
        TableColumn statusColumn = jTable1.getColumnModel().getColumn(10); 
        statusColumn.setCellEditor(new DefaultCellEditor(comboBox));
       
    }
    
    
           
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        saveMe = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        createPurchaseOrder = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {},
            new String [] {
                "PR Id", "Item Id", "Item Name", "Quantity","Unit Price", "Amount", "Request Date", "Expected Delivery Date", "Created By", "Note","Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false,false, false, false, false,false,true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel3.setBackground(new java.awt.Color(238, 238, 253));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel2.setText("  Omega Wholesale Sdn Bhd ");

        jButton6.setText("Item LIst");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Supplier List");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Purchase Requisition");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Purchase Order");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("Received Order");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setText("______________________________________________");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel9.setText("(OWSB)");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jButton7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(jLabel9)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addGap(52, 52, 52)
                .addComponent(jButton6)
                .addGap(18, 18, 18)
                .addComponent(jButton7)
                .addGap(18, 18, 18)
                .addComponent(jButton8)
                .addGap(18, 18, 18)
                .addComponent(jButton9)
                .addGap(18, 18, 18)
                .addComponent(jButton10)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Algerian", 0, 24)); // NOI18N
        jLabel11.setText("Purchase REquisition");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel13.setText("Purchase Requisition Table");

        saveMe.setFont(new java.awt.Font("Segoe UI Black", 1, 13)); // NOI18N
        saveMe.setText("Save Changes");
        saveMe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMeActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("STZhongsong", 2, 13)); // NOI18N
        jLabel1.setText("Search: ");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });

        createPurchaseOrder.setFont(new java.awt.Font("Segoe UI Emoji", 1, 14)); // NOI18N
        createPurchaseOrder.setText("Create Purchase Order");
        createPurchaseOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createPurchaseOrderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(604, 604, 604)
                        .addComponent(saveMe)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(479, 479, 479))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jLabel4)
                        .addGap(127, 127, 127)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(249, 249, 249)
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(createPurchaseOrder))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 946, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(133, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(116, 116, 116)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel13)
                                    .addComponent(createPurchaseOrder))
                                .addGap(1, 1, 1)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(250, 250, 250)
                        .addComponent(jLabel4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(saveMe)
                .addContainerGap(183, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        //        new SM_ItemEntry(salesmanager).setVisible(true);
        //        this.dispose();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        //        new SM_SupplierEntry(salesmanager).setVisible(true);
        //        this.dispose();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        //        new SM_DailySalesEntry(salesmanager).setVisible(true);
        //        this.dispose();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        //        new SM_PurchaseRequisition(salesmanager).setVisible(true);
        //        this.dispose();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        //        new SM_PurchaseOrder(salesmanager).setVisible(true);
        //        this.dispose();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void saveMeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMeActionPerformed
        // save changes button
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        System.out.println("Column count at initialization: " + model.getColumnCount());
        boolean savedChanges = false;
        

        for(int i=0; i< model.getRowCount(); i++){ //studpid me waste 30min solve this
            String prid = model.getValueAt(i,0).toString();
            String updatedStatus = model.getValueAt(i,9).toString();
            
            
            PurchaseRequisition oldpr = prmanager.findprid(prid);
            if (oldpr != null && !oldpr.getApprovestatus().toString().equals(updatedStatus)) {
                // Status has changed, confirm before saving
                int confirm = JOptionPane.showConfirmDialog(
                    null,
                    "Do you want to change the status of PR ID " + prid + " to " + updatedStatus + "?",
                    "Confirm Save",
                    JOptionPane.YES_NO_OPTION
                );
                
                if (confirm == JOptionPane.YES_OPTION) {
                    prmanager.updatepr(
                        oldpr.getPrid(),
                        oldpr.getItemids(),
                        oldpr.getUserid(),
                        oldpr.getQuantities(),
                        oldpr.getUnitPrices(),
                        oldpr.getTotal(),
                        oldpr.getRequestdate(),
                        oldpr.getExpecteddeliverydate(),
                        PurchaseRequisition.ApproveStatus.fromString(updatedStatus),
                        oldpr.getNote()
                    );
                    savedChanges = true;
                } else {
                    // Revert change visually if cancelled
                    model.setValueAt(oldpr.getApprovestatus().toString(), i, 9);
                }
                
                if (savedChanges) {
                    JOptionPane.showMessageDialog(null, "Changes saved successfully.");
                } else {
                    JOptionPane.showMessageDialog(null, "No changes were saved.");
                }

             }
            
            
        }
        
    }//GEN-LAST:event_saveMeActionPerformed

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
       //Search
        String searchString = jTextField1.getText();
        search(searchString);
    }//GEN-LAST:event_jTextField1KeyReleased

    private void createPurchaseOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createPurchaseOrderActionPerformed
        //create PO 
        
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Please select a row to generate a Purchase Order.");
            return;
        }

        // Check if status is approved
        String status = jTable1.getValueAt(selectedRow, 10).toString().trim().toLowerCase();
        if (!status.equals("approved")) {
            JOptionPane.showMessageDialog(null, "Only approved requests can generate a Purchase Order.");
            return;
        }
        // Confirm with user before proceeding
        int confirm = JOptionPane.showConfirmDialog(null, "Are you sure you want to generate the PO?", "Confirmation", JOptionPane.YES_NO_OPTION);
        if (confirm != JOptionPane.YES_OPTION) {
            return; // Stop if user clicks "No"
        }
        
       // Extract PR row data
        String requestId = jTable1.getValueAt(selectedRow, 0).toString();
        String itemIdsRaw = jTable1.getValueAt(selectedRow, 1).toString(); // Comma or pipe separated
        String userId = jTable1.getValueAt(selectedRow, 8).toString();
        String quantitiesRaw = jTable1.getValueAt(selectedRow, 3).toString();
        String unitPriceRaw=jTable1.getValueAt(selectedRow,4).toString();
        double amount = Double.parseDouble(jTable1.getValueAt(selectedRow, 5).toString());

        String[] itemIdList = itemIdsRaw.contains("|") ? itemIdsRaw.split("\\|") : itemIdsRaw.split(",");
        String[] quantityList = quantitiesRaw.contains("|") ? quantitiesRaw.split("\\|") : quantitiesRaw.split(",");
        String[] unitPriceList = unitPriceRaw.contains("|") ? unitPriceRaw.split("\\|") : unitPriceRaw.split(",");

        List<String> validItemIds = new ArrayList<>();
        List<String> validQuantities = new ArrayList<>();
        List<String> validUnitPrices = new ArrayList<>();
        List<String> supplierIds = new ArrayList<>();
        
        List<String> existingPOs = TextFile.readFile("C:\\Users\\Isaac\\OneDrive - Asia Pacific University\\Documents\\NetBeansProjects\\java-assignment\\java-assignment\\src\\java_assignment2025\\PurchaseOrder.txt");

        for (int i = 0; i < itemIdList.length; i++) {
            String itemId = itemIdList[i].trim();
            String unitprice= unitPriceList[i].trim();
            String quantity = quantityList[i].trim();

            // Check for duplicate PO (based on requestId and itemId)
            boolean isDuplicate = existingPOs.stream().anyMatch(line -> {
                String[] parts = line.split(",");
                return parts.length >= 4 && parts[1].equals(requestId) && Arrays.asList(parts[3].split("\\|")).contains(itemId);
            });

            if (isDuplicate) {
                JOptionPane.showMessageDialog(null, "PO for Request ID " + requestId + " and Item ID " + itemId + " already exists. Skipping this item...");
                return;
            }

            // Find supplier ID
            Item item = inventorydatamanager.finditemid(itemId);
            String supplierId = (item != null) ? item.getSupplierid() : "Unknown";

            validItemIds.add(itemId);
            validQuantities.add(quantity);
            validUnitPrices.add(unitprice);
            supplierIds.add(supplierId);
        }

        // Only create PO if there are valid items
        if (!validItemIds.isEmpty()) {
            String nextPoId = PurchaseOrder.getNextOrderId();
            String poCreator = "MACY";
            PurchaseOrder po = new PurchaseOrder(
                nextPoId,
                poCreator,
                requestId,
                userId,
                validItemIds,
                validUnitPrices,
                validQuantities,
                amount,  
                supplierIds,
                PurchaseOrderManager.getCurrentDate(),
                "pending",
                "pending",
                "unpaid"
            );

            // Write to file
            String poLine = po.toString(); 
            System.out.println(poLine);
            TextFile.appendTo("C:\\Users\\Isaac\\OneDrive - Asia Pacific University\\Documents\\NetBeansProjects\\java-assignment\\java-assignment\\src\\java_assignment2025\\PurchaseOrder.txt", poLine);
            JOptionPane.showMessageDialog(null, "Purchase Order generated successfully.");
             new PMPurchaseOrder().setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "No valid items to generate PO. All were duplicates.");
        }

    }//GEN-LAST:event_createPurchaseOrderActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        
    }//GEN-LAST:event_jTextField1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PM_PurchaseRequisition.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PM_PurchaseRequisition.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PM_PurchaseRequisition.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PM_PurchaseRequisition.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PM_PurchaseRequisition().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton createPurchaseOrder;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton saveMe;
    // End of variables declaration//GEN-END:variables
}

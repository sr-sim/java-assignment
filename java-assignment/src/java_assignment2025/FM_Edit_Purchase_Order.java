/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package java_assignment2025;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Macy Khoo
 */
public class FM_Edit_Purchase_Order extends javax.swing.JFrame {
    private PurchaseOrder selectedPO;
    private PurchaseOrderManager pomanager;
    private InventoryDataManager inventorydatamanager;
    private UserDataManager userManager = new UserDataManager();
    private boolean isEditMode;
    /**
     * Creates new form PM_Edit_Purchase_Order
     */
    public FM_Edit_Purchase_Order(PurchaseOrder selectedPO, PurchaseOrderManager pomanager, InventoryDataManager inventorydatamanager, boolean isEditMode) {
        initComponents();
        this.selectedPO = selectedPO;
        this.pomanager = pomanager;
        this.inventorydatamanager = inventorydatamanager;
        this.isEditMode = isEditMode;
        triggerEditMode(isEditMode);
        
        importItemDetails();
       
    }

    private void triggerEditMode(boolean editable){
        supplierList.setEnabled(editable);
        supplierList.setVisible(editable);
        jLabel20.setVisible(editable);
        jLabel21.setVisible(editable);
        txtQuantity.setEnabled(editable);
        txtQuantity.setVisible(editable);
        btnDone.setVisible(editable);
        btnSave.setVisible(editable);
       
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        poId = new javax.swing.JLabel();
        orderDate = new javax.swing.JLabel();
        prId = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        prCreator = new javax.swing.JLabel();
        subtotal = new javax.swing.JLabel();
        poCreator = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        receivedStatus = new javax.swing.JLabel();
        paymentStatus = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        supplierList = new javax.swing.JComboBox<>();
        jLabel21 = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        btnDone = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jLabel14.setFont(new java.awt.Font("Algerian", 0, 24)); // NOI18N

        jPanel7.setBackground(new java.awt.Color(204, 255, 204));

        jLabel1.setFont(new java.awt.Font("Perpetua", 1, 36)); // NOI18N
        jLabel1.setText("Purchase Order");

        poId.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 14)); // NOI18N
        poId.setText("Purchase Order ID: ");

        orderDate.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 14)); // NOI18N
        orderDate.setText("Order Date :");

        prId.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 14)); // NOI18N
        prId.setText("Purchase Requisition ID:");

        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {},
            new String [] {
                "Item Id", "Item Name", "Quantity", "Unit Price", "Total", "Supplier Id", "Supplier Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false , false , false , false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        prCreator.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 14)); // NOI18N
        prCreator.setText("PR Created by: ");

        subtotal.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 14)); // NOI18N
        subtotal.setText("Subtotal: ");

        poCreator.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 14)); // NOI18N
        poCreator.setText("PO Created By :");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel11.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        receivedStatus.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 14)); // NOI18N
        receivedStatus.setText("Order Received Status: ");

        paymentStatus.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 14)); // NOI18N
        paymentStatus.setText("Payment Status: ");

        jLabel6.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 14)); // NOI18N
        jLabel6.setText("PO Approved By:");

        jLabel7.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 14)); // NOI18N
        jLabel7.setText("Status :");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(683, Short.MAX_VALUE))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(0, 17, Short.MAX_VALUE)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel10)
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(subtotal)
                                        .addGap(25, 25, 25)))
                                .addGap(110, 110, 110))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(106, 106, 106)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 677, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel7Layout.createSequentialGroup()
                                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(prId, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(jPanel7Layout.createSequentialGroup()
                                                    .addComponent(poId)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGap(269, 269, 269)
                                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(orderDate)
                                                .addComponent(prCreator)))))
                                .addGap(63, 63, 63))))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(paymentStatus)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(receivedStatus)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(poCreator)))
                        .addGap(87, 87, 87))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(163, 163, 163)
                        .addComponent(jLabel3)))
                .addGap(478, 478, 478))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel7))
                .addGap(54, 54, 54)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(orderDate)
                        .addGap(1, 1, 1)
                        .addComponent(jLabel3))
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(poId)
                        .addComponent(jLabel11)))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prId)
                    .addComponent(prCreator))
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel15))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(subtotal)
                    .addComponent(jLabel4))
                .addGap(34, 34, 34)
                .addComponent(jLabel5)
                .addGap(34, 34, 34)
                .addComponent(jLabel10)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(0, 44, Short.MAX_VALUE)
                        .addComponent(paymentStatus)
                        .addGap(15, 15, 15))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(receivedStatus)
                            .addComponent(poCreator))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        btnSave.setBackground(new java.awt.Color(255, 255, 153));
        btnSave.setFont(new java.awt.Font("PMingLiU", 1, 18)); // NOI18N
        btnSave.setText("Save Me");
        btnSave.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel20.setText("Suppliers:");

        supplierList.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        supplierList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {}));
        supplierList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierListActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel21.setText("Quantity :");

        txtQuantity.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuantityActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(238, 238, 253));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel2.setText("  Omega Wholesale Sdn Bhd ");

        jButton6.setText("Payment List");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Purchase Order");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Sales Report");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setText("______________________________________________");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel9.setText("(OWSB)");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(jLabel9)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addGap(71, 71, 71)
                .addComponent(jButton7)
                .addGap(29, 29, 29)
                .addComponent(jButton6)
                .addGap(26, 26, 26)
                .addComponent(jButton8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnDone.setBackground(new java.awt.Color(255, 255, 204));
        btnDone.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnDone.setText("Done");
        btnDone.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoneActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(255, 255, 204));
        jButton5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton5.setText("Done");
        jButton5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel14)
                        .addContainerGap(1061, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel21))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(supplierList, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addGap(53, 53, 53)
                                        .addComponent(btnDone, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(61, 61, 61))))
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addGap(294, 294, 294)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(916, Short.MAX_VALUE)))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(234, 234, 234)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(supplierList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21)
                            .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btnDone))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(btnSave)
                .addGap(23, 23, 23))
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                    .addContainerGap(425, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(280, 280, 280)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void importItemDetails(){
        
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        poId.setText("Purchase Requisition ID: " + selectedPO.getOrderId());
        prId.setText("Purchase OrderID: " + selectedPO.getRequestId());
        orderDate.setText("Order date: " + selectedPO.getOrderDate());
        String prcreator = selectedPO.getUserId();
        String pocreator = selectedPO.getPoCreator();
        User userofprcreator = userManager.findUserByID(prcreator);
        User userofpocreator = userManager.findUserByID(pocreator);
        String prusername = (userofprcreator != null) ? userofprcreator.getFullname() : prcreator;
        String pousername = (userofpocreator != null) ? userofpocreator.getFullname() : pocreator;
        prCreator.setText("PR Created by: " + prcreator+" - "+prusername);
        poCreator.setText("PO Created by: " + pocreator+" - "+pousername);
        subtotal.setText(String.format("Subtotal: RM" + "%.2f", selectedPO.getAmount()));
        receivedStatus.setText("Order Received Status:  " + selectedPO.getVerifyStatus());
        paymentStatus.setText("Payment Status:  " + selectedPO.getPaymentStatus());
        jLabel7.setText("Status: " + selectedPO.getOrderStatus());
        String status = selectedPO.getOrderStatus();
        if ("approved".equals(status) || "reject".equals(status)) {
            String statuschangeby = selectedPO.getPostatuschangeby();
            User user = userManager.findUserByID(statuschangeby);
            String userName = (user != null) ? user.getFullname() : statuschangeby;

            String labelPrefix = ("approved".equals(status)) ? "PO Approved by: " : "Rejected by: ";
            jLabel6.setText(labelPrefix + statuschangeby+" - "+userName);
        } else {
            jLabel6.setText(""); 
        }

        List<String> itemIds = selectedPO.getItemIds();
        List<String> quantities = selectedPO.getQuantities();
        List<String> unitPrices = selectedPO.getUnitPrices();
        List<String> supplierIds = selectedPO.getSupplierIds();
        
        for (int i=0; i<itemIds.size();i++){
            String itemId = itemIds.get(i);
            String quantityRaw = (i < quantities.size()) ? quantities.get(i) : "0";
            String unitPriceRaw = (i < unitPrices.size()) ? unitPrices.get(i) : "0.00";
            String supplierId = (i < supplierIds.size()) ? supplierIds.get(i) : "Unknown";

            Item item = inventorydatamanager.finditemid(itemId);
            String itemName = (item != null) ? item.getItemname() : "Unknown Item";

            String supplierName = PurchaseOrderManager.findSupplierNameById(supplierId);

            // Calculate amount
            int quantity = 0;
            double unitPrice = 0.0;
            try {
                quantity = Integer.parseInt(quantityRaw);
                unitPrice = Double.parseDouble(unitPriceRaw);
            } catch (NumberFormatException e) {
                // Leave as 0 if parsing fails
            }
            double amount = quantity * unitPrice;
            
            model.addRow(new Object[] {
                itemId,
                itemName,
                quantity,
                unitPrice,
                amount,
                supplierId,
                supplierName
            });
            
        }
        
//    fillComboBoxFromitemList(); 
   }
    
//    private void fillComboBoxFromitemList() {
//        for (Item item : inventorydatamanager.getinventorylist()) {
//            if(!item.isDeleted()){
//                String comboBoxItem = item.getItemid() + " - " + item.getItemname();
//                supplierList.addItem(comboBoxItem);
//            }
//        }
//    }
    
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // in selected po item table, select a row
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow != -1) {
            String itemName = jTable1.getValueAt(selectedRow, 1).toString();
            String quantity = jTable1.getValueAt(selectedRow, 2).toString();
            String currentSupplierId = jTable1.getValueAt(selectedRow, 5).toString();
            String currentSupplierName = jTable1.getValueAt(selectedRow, 6).toString();

            supplierList.removeAllItems();
            Set<String> oriSuppliers = new HashSet<>();

            List<String> lines = TextFile.readFile(inventorydatamanager.getinventoryfilepath());
            boolean foundSupplier = false;

            for (String line : lines) {
                String[] parts = line.split(",", 11);
                if (parts.length < 10) {
                    System.out.println("Skipping invalid line: " + line);
                    continue;
            }

                String invItemName = parts[1].trim();
                String invSupplierId = parts[3].trim();
                boolean isDeleted = Boolean.parseBoolean(parts[9].trim());

                if (invItemName.equalsIgnoreCase(itemName) && !isDeleted && !oriSuppliers.contains(invSupplierId)) {
                    String supplierName = PurchaseOrderManager.findSupplierNameById(invSupplierId);
                    if (supplierName == null) supplierName = "Unknown Supplier";

                    String comboItem = invSupplierId + " - " + supplierName;
                    supplierList.addItem(comboItem);
                    oriSuppliers.add(invSupplierId);

                    System.out.println("Added to combo box: " + comboItem);

                    if (invSupplierId.equals(currentSupplierId)) {
                        foundSupplier = true;
                    }
                }
            }

           String selected = currentSupplierId + " - " + currentSupplierName;
           String matchedItem = null;

            for (int i = 0; i < supplierList.getItemCount(); i++) {
                String item = (String) supplierList.getItemAt(i);
                if (item.startsWith(currentSupplierId + " -")) {
                    matchedItem = item; 
                    break;
                }
            }

            if (matchedItem == null) {
                // Not found, add current supplier anyway
                supplierList.addItem(selected);
                matchedItem = selected;
            }

            supplierList.setSelectedItem(matchedItem);
            txtQuantity.setText(quantity);
        }

    }//GEN-LAST:event_jTable1MouseClicked

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // Save Me
        String currentPoId = selectedPO.getOrderId(); // Pass or store this from your Edit Frame
        List<String> poLines = TextFile.readFile(pomanager.getpofilepath());
        List<String> updatedPoLines = new ArrayList<>();

        for (String line : poLines) {
            if (!line.startsWith(currentPoId + ",")) {
                updatedPoLines.add(line); 
                continue;
            }

        // Build updated line from table
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        List<String> itemIds = new ArrayList<>();
        List<String> quantities = new ArrayList<>();
        List<String> unitPrices = new ArrayList<>();
        List<String> suppliers = new ArrayList<>();
        double total = 0.0;

        for (int i = 0; i < model.getRowCount(); i++) {
            String itemId = model.getValueAt(i, 0).toString();
            String quantity = model.getValueAt(i, 2).toString();
            String unitPrice = model.getValueAt(i, 3).toString();
            String supplier = model.getValueAt(i, 5).toString();

            itemIds.add(itemId);
            quantities.add(quantity);
            unitPrices.add(unitPrice);
            suppliers.add(supplier);

            try {
                total += Double.parseDouble(quantity) * Double.parseDouble(unitPrice);
            } catch (NumberFormatException e) {
                
            }
        }

        String[] poParts = line.split(",", -1);
        if (poParts.length >= 13) {
            poParts[4] = String.join("|", itemIds);
            poParts[6] = String.join("|", quantities);
            poParts[5] = String.join("|", unitPrices);
            poParts[7] = String.valueOf(total);
            poParts[8] = String.join("|", suppliers);
            String updatedLine = String.join(",", poParts);
            updatedPoLines.add(updatedLine);
        } else {
            updatedPoLines.add(line); 
        }
    }

    // write into PO text file
    TextFile.rewriteFile(pomanager.getpofilepath(), updatedPoLines);
    JOptionPane.showMessageDialog(null, "Changes saved to file successfully.");
    this.dispose();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void supplierListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierListActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_supplierListActionPerformed

    private void txtQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuantityActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        new FMCreatePayment().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        new FMPurchaseOrder().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        new FinanceDailySum().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void btnDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoneActionPerformed
        //Done button
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Please select a row to update.");
            return;
        }

        String selectedSupplier = (String) supplierList.getSelectedItem();
        if (selectedSupplier == null || !selectedSupplier.contains(" - ")) {
            JOptionPane.showMessageDialog(null, "Please select a valid supplier.");
            return;
        }

        // Get the supplier ID from the selected item in combo box
        String supplierId = selectedSupplier.split(" - ")[0].trim();
        String itemName = jTable1.getValueAt(selectedRow, 1).toString();

        System.out.println("Searching for item: " + itemName + " with supplier: " + supplierId);

        // Search inventory for matching itemId and unitPrice
        String newItemId = "";
        double unitPrice = 0.0;
        List<String> inventoryLines = TextFile.readFile(inventorydatamanager.getinventoryfilepath());

        for (String line : inventoryLines) {
            String[] parts = line.split(",", 10);
            if (parts.length < 9) {
                System.out.println("Skipping invalid line: " + line);
                continue;
            }

            String invItemId = parts[0].trim();
            String invItemName = parts[1].trim();
            String invSupplierId = parts[3].trim();
            String invUnitPrice = parts[4].trim();
            boolean isDeleted = Boolean.parseBoolean(parts[9].trim());

            System.out.println("Checking inventory item: " + invItemName + " with supplier: " + invSupplierId);

            if (invItemName.equalsIgnoreCase(itemName) && invSupplierId.equals(supplierId) && !isDeleted) {
                newItemId = invItemId;
                try {
                    unitPrice = Double.parseDouble(invUnitPrice);
                    System.out.println("Found matching item! ID: " + newItemId + ", Price: " + unitPrice);
                    break;
                } catch (NumberFormatException e) {
                    System.out.println("Error parsing unit price: " + invUnitPrice);
                }
            }
        }

        if (newItemId.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Matching item with selected supplier not found in inventory.");
            return;
        }

        // Get supplier name
        String supplierName = selectedSupplier.split(" - ")[1].trim();

        // Validate and get quantity
        int quantity;
        try {
            quantity = Integer.parseInt(txtQuantity.getText().trim());
            if (quantity <= 0) {
                JOptionPane.showMessageDialog(null, "Please enter a valid quantity greater than 0.");
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please enter a valid numeric quantity.");
            return;
        }

        // Calculate total
        double total = quantity * unitPrice;

        // Update table
        jTable1.setValueAt(newItemId, selectedRow, 0);      // Item ID
        jTable1.setValueAt(itemName, selectedRow, 1);       // Item Name
        jTable1.setValueAt(quantity, selectedRow, 2);       // Quantity
        jTable1.setValueAt(unitPrice, selectedRow, 3);      // Unit Price
        jTable1.setValueAt(total, selectedRow, 4);          // Total
        jTable1.setValueAt(supplierId, selectedRow, 5);     // Supplier ID
        jTable1.setValueAt(supplierName, selectedRow, 6);   // Supplier Name

        // Recalculate subtotal
        double newSubtotal = 0.0;
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            Object totalValue = jTable1.getValueAt(i, 4);
            if (totalValue != null) {
                try {
                    newSubtotal += Double.parseDouble(totalValue.toString());
                } catch (NumberFormatException e) {
                    // Skip invalid values
                }
            }
        }

        // Update the subtotal label
        subtotal.setText(String.format("Subtotal: RM%.2f", newSubtotal));
        
        JOptionPane.showMessageDialog(null, "Item updated successfully. Click 'Save Me' to update the Purchase Order.");



    
    }//GEN-LAST:event_btnDoneActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */

//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new PM_Edit_Purchase_Order().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDone;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel orderDate;
    private javax.swing.JLabel paymentStatus;
    private javax.swing.JLabel poCreator;
    private javax.swing.JLabel poId;
    private javax.swing.JLabel prCreator;
    private javax.swing.JLabel prId;
    private javax.swing.JLabel receivedStatus;
    private javax.swing.JLabel subtotal;
    private javax.swing.JComboBox<String> supplierList;
    private javax.swing.JTextField txtQuantity;
    // End of variables declaration//GEN-END:variables
}
